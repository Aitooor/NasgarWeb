<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Nasgar | Shop</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="/css/panel.css">
  <link rel="stylesheet" href="/css/sup.css">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g==" crossorigin="anonymous" referrerpolicy="no-referrer" />

  <link rel="shortcut icon" href="/img/logo-128x.png" type="image/x-icon">
  <meta property="og:type" content="website">
  <meta name="theme-color" content="#36A2DF">
  <meta property="og:site_name" content="Nasgar.online">
  <meta name="og:title" content="Nasgar Network!">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="og:icon" content="/img/logo-128x.png">
  <meta name="description" content="description">
  <meta name="og:description" content="description">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css" integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <script src="https://unpkg.com/stackedit-js@1.0.7/docs/lib/stackedit.min.js"></script>

  <link rel="stylesheet" href="https://uicdn.toast.com/editor/latest/toastui-editor.min.css" />
  <link rel="stylesheet" href="https://uicdn.toast.com/tui-color-picker/latest/tui-color-picker.min.css" />
  <link rel="stylesheet" href="https://uicdn.toast.com/editor-plugin-color-syntax/latest/toastui-editor-plugin-color-syntax.min.css" />

</head>

<body>
  <%- include('./templates/nav.ejs') %>
  <div class="left-container unactive" id="left-container">
    <div class="leftBTNC">
      <i id="leftBTN" class="fa-solid fa-forward-step"></i>
    </div>
    <% if(user.admin) {%>
    <ul>
      <hr>
      <li><a class="optionTitle1" href="/panel">Panel home</a></li>
      <li><a class="optionTitle1" href="/panel/news">News</a></li>
      <li><a class="optionTitle1" href="/panel/shop">Shop</a></li>
      <li><a class="option1" href="/panel/shop">Products</a></li>
      <li><a class="option2" href="/panel/shop">All products</a></li>
      <li><a class="option2" href="/panel/shop/create">Create</a></li>
      <li><a class="option1" href="/panel/category">Categories</a></li>
      <li><a class="option1" href="/panel/subcategory">Subcategories</a></li>
      <li><a class="optionTitle1" href="/panel/timings">StaffTimings</a></li>
      <hr>
    </ul>
    <% } else { %>
    <ul>

    </ul>
    <% } %>

  </div>
  <main>
    <div class="row">
      <% if(type=='main' ){ %>
      <div class="col-12">
        <a href="/panel" class="btn btn-primary"><i class="fa-solid fa-arrow-left"></i> Back</a>
        <form method="get" action="/panel/shop" class="d-flex justify-center">

          <select class="form-select form-select-sm" aria-label=".form-select-sm" id="categorySelector" name="category">

            <option value="">
              Select Category
            </option>

            <% categories.filter(c => c.type == "main").forEach(c=> { %>
            <option value=<%-c.name %>>
              <%- c.name %>
            </option>
            <% }); %>

          </select>


          <button type="submit" class="btn btn-primary">Filter</button>
        </form>
      </div>
      <div class="col-12">
        <table class="table">
          <thead>
            <tr>
              <th scope="col">ID</th>
              <th scope="col">Name</th>
              <th scope="col">Price (USD)</th>
              <th scope="col">Commands</th>
              <th scope="col">Manage</th>
            </tr>
          </thead>
          <tbody>
            <% content.forEach(item=>{ %>
            <tr>
              <td>
                <%- item.id %>
              </td>
              <td>
                <%- item.name %>
              </td>
              <td>
                <%- item.price %>
              </td>
              <td>
                <%- item.commands.length %>
              </td>
              <td><a href="<%- `/panel/shop/${item.id}` %>" class="btn btn-outline-primary">Manage</a> </td>
            </tr>
            <% }) %>
          </tbody>
        </table>
        <a href="/panel/shop/create" class="btn btn-primary">Create</a>
      </div>
      <% } else if (type=='create' ){%>
      <div class="col-12">
        <a href="/panel/shop" class="btn btn-primary"><i class="fa-solid fa-arrow-left"></i> Back</a>
      </div>
      <div class="col-12">
        <form method="post" action="/panel/shop/create">
          <fieldset>
            <div class="mb-3">
              <label for="name" class="form-label">Name</label>
              <input type="text" class="form-control" id="name" name="name">
            </div>

            <% const l =  categories.filter(c => c.type == "sub").length + 1 >= 3 ? 3 : categories.filter(c => c.type == "sub").length + 1 %>

            <% if(categories.filter(c => c.type == "sub").length + 1> 0 ){for (let i = 0; i < l ; i++) { %>
            <div class="mb-3">
              <select class="form-select form-select-sm" aria-label=".form-select-sm" id="<%- "c_"+i %>" name="<%- "c_"+i %>">

                <% if(i == 0){ %>
                <option value="<% "c_"+i %>" selected>Select a category</option>
                <% categories.filter(c => c.type == 'main').forEach(c=> { %>
                <option value=<%-c.name %>>
                  <%- c.name %>
                </option>
                <% }); %>
                <% } else {%>
                <option value="<% "c_"+i %>" selected>Select a subcategory</option>
                <% categories.filter(c => c.type == 'sub').forEach(c=> { %>
                <option value=<%-c.name %>>
                  <%- c.name %>
                </option>
                <% }); %>
                <% } %>


              </select>
            </div>

            <% }} %>

            <div class="mb-3">
              <label for="price" class="form-label">Price</label>
              <input type="number" class="form-control" id="price" name="price">
            </div>
            <div class="mb-3">
              <label for="type" class="form-label">Image URL</label>
              <input type="text" class="form-control" id="type" name="image">
            </div>
            <div class="mb-3">
              <label for="content" class="form-label">Description</label>
              <div style="display: flex; justify-content: space-around;">
                <input type="text" class="form-control" id="content" name="description">
                <div class="btn btn-primary" onclick="openEditor()">Editor</div>
                <div id="editor"></div>
              </div>
            </div>
            <div class="mb-3" style="display: none;">
              <input type="text" class="form-control" id="commands" name="commands">
            </div>

            <label for="commands" class="form-label">Commands</label>
            <div class="commandsContainer mb-3" id="commandsContainer">
              <% for (i = 0; i < 0; i++){%>
              <div class="commandBase mb-3 d-flex" id="<%- "command-"+i %>">
                <input type="text" class="commandAdded form-control" value="">
                <div class="btn btn-danger deleteCommand" id="<%- "commandBTN-"+i %>">-</div>
              </div>
              <% } %>
            </div>

            <div class="mb-3">
              <div class="btn btn-primary" id="addCommand">Add Command +</div>
            </div>
            

            <script>
              const commandsBase = document.getElementById("commandsContainer");

              [...commandsBase.getElementsByClassName("deleteCommand")].map(c => {
                c.addEventListener("click", (ev) => {
                  const cmd = document.getElementById(c.id.replace("BTN", ""))
                  cmd.remove()
                })
              })

              const add = document.getElementById("addCommand")
              add.addEventListener("click", (ev) => {
                const commandContainer = document.getElementById("commandsContainer")
                const commandBase = document.createElement("div")
                const commandInput = document.createElement("input")
                const commandDel = document.createElement("div")
                commandBase.className = "commandBase mb-3 d-flex"
                commandBase.id = "command-" + [...commandsBase.getElementsByClassName("commandAdded")].length
                commandContainer.insertAdjacentElement("beforeend", commandBase)
                commandInput.className = "commandAdded form-control"
                commandBase.insertAdjacentElement("afterbegin", commandInput)
                commandDel.className = "btn btn-danger deleteCommand"
                commandDel.textContent = "-"
                commandDel.id =  "commandBTN-" + [...commandsBase.getElementsByClassName("commandAdded")].length
                commandBase.insertAdjacentElement("beforeend", commandDel)
                commandDel.addEventListener("click", (ev) => {
                  const cmd = document.getElementById(c.id.replace("BTN", ""))
                  cmd.remove()
                })
              })

              setInterval(() => {
                const commandsBase = document.getElementById("commandsContainer")
                const commands = [...commandsBase.getElementsByClassName("commandAdded")].filter(c => c.value.trim() != "").map(c => c.value.trim())
                const commandInput = document.getElementById("commands")
                commandInput.value = commands.join(",")
              }, 10);
            </script>

            <button type="submit" class="btn btn-primary">Create</button>

          </fieldset>
        </form>
      </div>
      <% } else if (type=='manage' ){%>
      <div class="col-12">
        <a href="/panel/shop" class="btn btn-primary"><i class="fa-solid fa-arrow-left"></i> Back</a>
      </div>
      <div class="col-12">
        <form method="post" action="/panel/shop/<%- content.id %>">
          <fieldset>
            <div class="mb-3">
              <label for="name" class="form-label">Name</label>
              <input type="text" class="form-control" id="name" name="name" value="<%- content.name %> ">
            </div>

            <% const l =  categories.filter(c => c.type == "sub").length + 1 >= 3 ? 3 : categories.filter(c => c.type == "sub").length + 1 %>

            <% if(categories.filter(c => c.type == "sub").length + 1> 0 ){for (let i = 0; i < l ; i++) { %>
            <div class="mb-3">
              <select class="form-select form-select-sm" aria-label=".form-select-sm" id="<%- "c_"+i %>" name="<%- "c_"+i %>">

                <% if(i == 0){ %>
                <option value="<% "c_"+i %>" selected>Select a category</option>
                <% categories.filter(c => c.type == 'main').forEach(c=> { %>
                <option value=<%-c.name %>>
                  <%- c.name %>
                </option>
                <% }); %>
                <% } else {%>
                <option value="<% "c_"+i %>" selected>Select a subcategory</option>
                <% categories.filter(c => c.type == 'sub').forEach(c=> { %>
                <option value=<%-c.name %>>
                  <%- c.name %>
                </option>
                <% }); %>
                <% } %>


              </select>
            </div>

            <% }} %>

            <div class="mb-3">
              <label for="price" class="form-label">Price</label>
              <input type="text" class="form-control" id="price" name="price" value="<%- Number(content.price) %> ">
            </div>
            <div class="mb-3">
              <label for="type" class="form-label">Image URL</label>
              <input type="text" class="form-control" id="type" name="image" value="<%- content.image %> ">
            </div>
            <div class="mb-3">
              <label for="content" class="form-label">Description</label>
              <div style="display: flex; justify-content: space-around;">
                <input type="text" class="form-control" id="content" name="description" value='<%- content.description %> '>
                <div class="btn btn-primary" onclick="openEditor()">Editor</div>
                <div id="editor"></div>
              </div>
            </div>
            <div class="mb-3" style="display: none;">
              <input type="text" class="form-control" id="commands" name="commands" value="<%- content.commands.join(", ") %> ">
            </div>

            <label for="commands" class="form-label">Commands</label>
            <div class="commandsContainer mb-3" id="commandsContainer">
              <% for (i = 0; i < content.commands.length; i++){%>
              <div class="commandBase mb-3 d-flex" id="<%- "command-"+i %>">
                <input type="text" class="commandAdded form-control" value="<%- content.commands[i]%>">
                <div class="btn btn-danger deleteCommand" id="<%- "commandBTN-"+i %>">-</div>
              </div>
              <% } %>
            </div>

            <div class="mb-3">
              <div class="btn btn-primary" id="addCommand">Add Command +</div>
            </div>
            

            <script>
              const commandsBase = document.getElementById("commandsContainer");

              [...commandsBase.getElementsByClassName("deleteCommand")].map(c => {
                c.addEventListener("click", (ev) => {
                  const cmd = document.getElementById(c.id.replace("BTN", ""))
                  cmd.remove()
                })
              })

              const add = document.getElementById("addCommand")
              add.addEventListener("click", (ev) => {
                const commandContainer = document.getElementById("commandsContainer")
                const commandBase = document.createElement("div")
                const commandInput = document.createElement("input")
                const commandDel = document.createElement("div")
                commandBase.className = "commandBase mb-3 d-flex"
                commandBase.id = "command-" + [...commandsBase.getElementsByClassName("commandAdded")].length
                commandContainer.insertAdjacentElement("beforeend", commandBase)
                commandInput.className = "commandAdded form-control"
                commandBase.insertAdjacentElement("afterbegin", commandInput)
                commandDel.className = "btn btn-danger deleteCommand"
                commandDel.textContent = "-"
                commandDel.id =  "commandBTN-" + [...commandsBase.getElementsByClassName("commandAdded")].length
                commandBase.insertAdjacentElement("beforeend", commandDel)
                commandDel.addEventListener("click", (ev) => {
                  const cmd = document.getElementById(c.id.replace("BTN", ""))
                  cmd.remove()
                })
              })

              setInterval(() => {
                const commandsBase = document.getElementById("commandsContainer")
                const commands = [...commandsBase.getElementsByClassName("commandAdded")].filter(c => c.value.trim() != "").map(c => c.value.trim())
                const commandInput = document.getElementById("commands")
                commandInput.value = commands.join(",")
              }, 10);
            </script>

            <button type="submit" class="btn btn-primary">Edit</button>
            <a href="/panel/shop/<%- content.id %>/clone" class="btn btn-primary">Clone</a>
            <a href="/panel/shop/<%- content.id %>/delete" class="btn btn-danger">Delete</a>
          </fieldset>
        </form>
      </div>

      <% } %>
    </div>
    <div class="separator"></div>
  </main>
  <!-- Color Picker -->
  <script src="https://uicdn.toast.com/tui-color-picker/latest/tui-color-picker.min.js"></script>
  <!-- Editor -->
  <script src="https://uicdn.toast.com/editor/latest/toastui-editor-all.min.js"></script>
  <!-- Editor's Plugin -->
  <script src="https://uicdn.toast.com/editor-plugin-color-syntax/latest/toastui-editor-plugin-color-syntax.min.js"></script>
  <script>
    const leftBTN = document.getElementById("leftBTN")
    const left = document.getElementById("left-container")
    left.addEventListener('click', () => {
      console.log('a')
      if (left.classList.contains('active')) left.classList.replace('active', 'unactive')
      else left.classList.replace('unactive', 'active')
    })

    function openEditor() {
      const Editor = toastui.Editor;
      const {
        colorSyntax
      } = Editor.plugin;

      const el = document.createElement('div')

      el.style.position = "fixed"
      el.style.top = "50px"

      el.style.background = 'white'
      el.style.boxShadow = "black 0px 0px 10px"
      el.style.zIndex = "50"

      document.getElementById("editor").insertAdjacentElement("beforebegin", el)


      const bg = document.createElement("div")

      bg.style.width = "100%"
      bg.style.height = "100%"
      bg.style.background = '#ffffff96';
      bg.style.zIndex = "49"
      bg.style.position = "fixed"
      bg.style.top = "0px"

      const btn = document.createElement("div")



      btn.className = "btn btn-primary"
      btn.textContent = "Finish"
      btn.style.position = "fixed"
      btn.style.bottom = "20px"
      btn.style.zIndex = "51"
      btn.style.left = "57%"


      // const keyCollection = new Set()

      // document.body.addEventListener("keydown", (k)=>{
      //   if(k.key == "Enter") keyCollection.add("enter")
      //   if(k.shiftKey) keyCollection.add("shift")
      //   if(keyCollection.size == 2) console.log(1)
      // })

      // document.body.addEventListener("keyup", (k)=>{
      //   if(k.key == "Enter") keyCollection.delete("enter")
      //   if(k.shiftKey) keyCollection.delete("shift")
      //   if(keyCollection.size == 2) console.log(1)
      // })




      document.body.insertAdjacentElement("afterend", bg)
      document.body.insertAdjacentElement("afterend", btn)


      const editor = new Editor({
        el: el,
        height: '600px',
        initialEditType: 'markdown',
        previewStyle: 'vertical',
        plugins: [colorSyntax],
        initialValue: document.getElementById("content").value.replaceAll("<br>", "\n")
      });

      btn.addEventListener("click", () => closeEditor(el, btn, editor, bg))



      // const el = document.getElementById('content');
      // const stackedit = new Stackedit();

      // stackedit.openFile({
      //   name: 'Filename', // with an optional filename
      //   content: {
      //     text: el.value // and the Markdown content.
      //   }
      // });

      // stackedit.on('fileChange', (file) => {
      //   el.value = file.content.text;
      // });


    }

    function closeEditor(el, btn, editor, bg) {
      document.getElementById("content").value = editor.toastMark.lineTexts.join("<br>")
      bg.remove()
      el.remove()
      btn.remove()
    }
  </script>
</body>

</html>